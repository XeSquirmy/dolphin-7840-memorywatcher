diff --git a/CMakeLists.txt b/CMakeLists.txt
index 291efee..bdf6e7f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -528,6 +528,13 @@ if(USE_EGL)
 	add_definitions(-DUSE_EGL=1)
 endif()
 
+if(UNIX)
+	message("Using named pipes as controller inputs")
+	add_definitions(-DUSE_PIPES=1)
+	message("Watching game memory for changes")
+	add_definitions(-DUSE_MEMORYWATCHER=1)
+endif()
+
 if(ENABLE_EVDEV)
 	include(FindLibudev REQUIRED)
 	include(FindLibevdev REQUIRED)
diff --git a/Source/Core/Common/CommonPaths.h b/Source/Core/Common/CommonPaths.h
index b0a8dcd..dd28733 100644
--- a/Source/Core/Common/CommonPaths.h
+++ b/Source/Core/Common/CommonPaths.h
@@ -73,6 +73,8 @@
 #define SHADERS_DIR         "Shaders"
 #define WII_SYSCONF_DIR     "shared2" DIR_SEP "sys"
 #define WII_WC24CONF_DIR    "shared2" DIR_SEP "wc24"
+#define PIPES_DIR           "Pipes"
+#define MEMORYWATCHER_DIR   "MemoryWatcher"
 #define THEMES_DIR          "Themes"
 #define ANAGLYPH_DIR        "Anaglyph"
 
@@ -93,6 +95,10 @@
 #define ARAM_DUMP     "aram.raw"
 #define FAKEVMEM_DUMP "fakevmem.raw"
 
+// Files in the directory returned by GetUserPath(D_MEMORYWATCHER_IDX)
+#define MEMORYWATCHER_LOCATIONS "Locations.txt"
+#define MEMORYWATCHER_SOCKET	 "MemoryWatcher"
+
 // Sys files
 #define TOTALDB     "totaldb.dsy"
 
diff --git a/Source/Core/Common/FileUtil.cpp b/Source/Core/Common/FileUtil.cpp
index 5fdac9e..884302a 100644
--- a/Source/Core/Common/FileUtil.cpp
+++ b/Source/Core/Common/FileUtil.cpp
@@ -789,6 +789,7 @@ static void RebuildUserDirectories(unsigned int dir_index)
 		s_user_paths[D_LOGS_IDX]           = s_user_paths[D_USER_IDX] + LOGS_DIR DIR_SEP;
 		s_user_paths[D_MAILLOGS_IDX]       = s_user_paths[D_LOGS_IDX] + MAIL_LOGS_DIR DIR_SEP;
 		s_user_paths[D_THEMES_IDX]         = s_user_paths[D_USER_IDX] + THEMES_DIR DIR_SEP;
+		s_user_paths[D_PIPES_IDX]          = s_user_paths[D_USER_IDX] + PIPES_DIR DIR_SEP;
 		s_user_paths[F_DOLPHINCONFIG_IDX]  = s_user_paths[D_CONFIG_IDX] + DOLPHIN_CONFIG;
 		s_user_paths[F_DEBUGGERCONFIG_IDX] = s_user_paths[D_CONFIG_IDX] + DEBUGGER_CONFIG;
 		s_user_paths[F_LOGGERCONFIG_IDX]   = s_user_paths[D_CONFIG_IDX] + LOGGER_CONFIG;
@@ -797,6 +798,10 @@ static void RebuildUserDirectories(unsigned int dir_index)
 		s_user_paths[F_ARAMDUMP_IDX]       = s_user_paths[D_DUMP_IDX] + ARAM_DUMP;
 		s_user_paths[F_FAKEVMEMDUMP_IDX]   = s_user_paths[D_DUMP_IDX] + FAKEVMEM_DUMP;
 		s_user_paths[F_GCSRAM_IDX]         = s_user_paths[D_GCUSER_IDX] + GC_SRAM;
+		
+		s_user_paths[D_MEMORYWATCHER_IDX]          = s_user_paths[D_USER_IDX] + MEMORYWATCHER_DIR DIR_SEP;
+		s_user_paths[F_MEMORYWATCHERLOCATIONS_IDX] = s_user_paths[D_MEMORYWATCHER_IDX] + MEMORYWATCHER_LOCATIONS;
+		s_user_paths[F_MEMORYWATCHERSOCKET_IDX]    = s_user_paths[D_MEMORYWATCHER_IDX] + MEMORYWATCHER_SOCKET;
 		break;
 
 	case D_CONFIG_IDX:
diff --git a/Source/Core/Common/FileUtil.h b/Source/Core/Common/FileUtil.h
index 3deb91d..c9d022e 100644
--- a/Source/Core/Common/FileUtil.h
+++ b/Source/Core/Common/FileUtil.h
@@ -41,6 +41,8 @@ enum {
 	D_LOGS_IDX,
 	D_MAILLOGS_IDX,
 	D_THEMES_IDX,
+	D_PIPES_IDX,
+	D_MEMORYWATCHER_IDX,
 	F_DOLPHINCONFIG_IDX,
 	F_DEBUGGERCONFIG_IDX,
 	F_LOGGERCONFIG_IDX,
@@ -49,6 +51,8 @@ enum {
 	F_ARAMDUMP_IDX,
 	F_FAKEVMEMDUMP_IDX,
 	F_GCSRAM_IDX,
+	F_MEMORYWATCHERLOCATIONS_IDX,
+	F_MEMORYWATCHERSOCKET_IDX,
 	NUM_PATH_INDICES
 };
 
diff --git a/Source/Core/Core/CMakeLists.txt b/Source/Core/Core/CMakeLists.txt
index 207743b..c8145889 100644
--- a/Source/Core/Core/CMakeLists.txt
+++ b/Source/Core/Core/CMakeLists.txt
@@ -272,4 +272,8 @@ if(GDBSTUB)
 	set(SRCS ${SRCS} PowerPC/GDBStub.cpp)
 endif(GDBSTUB)
 
+if(UNIX)
+	set(SRCS ${SRCS} MemoryWatcher.cpp)
+endif(UNIX)
+
 add_dolphin_library(core "${SRCS}" "${LIBS}")
diff --git a/Source/Core/Core/Core.cpp b/Source/Core/Core/Core.cpp
index 7db5e45..f4c318c 100644
--- a/Source/Core/Core/Core.cpp
+++ b/Source/Core/Core/Core.cpp
@@ -27,6 +27,9 @@
 #include "Core/DSPEmulator.h"
 #include "Core/Host.h"
 #include "Core/MemTools.h"
+#ifdef USE_MEMORYWATCHER
+#include "Core/MemoryWatcher.h"
+#endif
 #include "Core/Movie.h"
 #include "Core/NetPlayClient.h"
 #include "Core/NetPlayProto.h"
@@ -105,6 +108,10 @@ static bool s_request_refresh_info = false;
 static int s_pause_and_lock_depth = 0;
 static bool s_is_framelimiter_temp_disabled = false;
 
+#ifdef USE_MEMORYWATCHER
+static std::unique_ptr<MemoryWatcher> s_memory_watcher;
+#endif
+
 #ifdef ThreadLocalStorage
 static ThreadLocalStorage bool tls_is_cpu_thread = false;
 #else
@@ -273,6 +280,9 @@ void Stop()  // - Hammertime!
 
 		g_video_backend->Video_ExitLoop();
 	}
+#ifdef USE_MEMORYWATCHER
+	s_memory_watcher.reset();
+#endif
 }
 
 static void DeclareAsCPUThread()
@@ -342,6 +352,10 @@ static void CpuThread()
 	}
 	#endif
 
+#ifdef USE_MEMORYWATCHER
+	s_memory_watcher = std::make_unique<MemoryWatcher>();
+#endif
+
 	// Enter CPU run loop. When we leave it - we are done.
 	CCPU::Run();
 
diff --git a/Source/Core/InputCommon/CMakeLists.txt b/Source/Core/InputCommon/CMakeLists.txt
index 549865b..50f5119 100644
--- a/Source/Core/InputCommon/CMakeLists.txt
+++ b/Source/Core/InputCommon/CMakeLists.txt
@@ -51,4 +51,8 @@ if(SDL_FOUND OR SDL2_FOUND)
 	endif()
 endif()
 
+if(UNIX)
+	set(SRCS ${SRCS} ControllerInterface/Pipes/Pipes.cpp)
+endif()
+
 add_dolphin_library(inputcommon "${SRCS}" "${LIBS}")
diff --git a/Source/Core/InputCommon/ControllerInterface/ControllerInterface.cpp b/Source/Core/InputCommon/ControllerInterface/ControllerInterface.cpp
index 0631069..93cd744 100644
--- a/Source/Core/InputCommon/ControllerInterface/ControllerInterface.cpp
+++ b/Source/Core/InputCommon/ControllerInterface/ControllerInterface.cpp
@@ -29,6 +29,9 @@
 #ifdef CIFACE_USE_EVDEV
 	#include "InputCommon/ControllerInterface/evdev/evdev.h"
 #endif
+#ifdef CIFACE_USE_PIPES
+	#include "InputCommon/ControllerInterface/Pipes/Pipes.h"
+#endif
 
 using namespace ciface::ExpressionParser;
 
@@ -75,6 +78,9 @@ void ControllerInterface::Initialize(void* const hwnd)
 #ifdef CIFACE_USE_EVDEV
 	ciface::evdev::Init(m_devices);
 #endif
+#ifdef CIFACE_USE_PIPES
+	ciface::Pipes::Init(m_devices);
+#endif
 
 	m_is_init = true;
 }
diff --git a/Source/Core/InputCommon/ControllerInterface/ControllerInterface.h b/Source/Core/InputCommon/ControllerInterface/ControllerInterface.h
index 3aca18e..08b282d 100644
--- a/Source/Core/InputCommon/ControllerInterface/ControllerInterface.h
+++ b/Source/Core/InputCommon/ControllerInterface/ControllerInterface.h
@@ -38,6 +38,9 @@
 #if defined(HAVE_LIBEVDEV) && defined(HAVE_LIBUDEV)
 	#define CIFACE_USE_EVDEV
 #endif
+#if defined(USE_PIPES)
+	#define CIFACE_USE_PIPES
+#endif
 
 //
 // ControllerInterface
